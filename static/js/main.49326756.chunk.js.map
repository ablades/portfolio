{"version":3,"sources":["components/Panel/Panel.js","components/Dashboard/Dashboard.js","components/Heading/Heading.js","components/Articles/Articles.js","components/About/About.js","components/Projects/Projects.js","components/IconButton/IconButton.js","components/Nav/Nav.js","components/ParticleBackground.js","App.js","serviceWorker.js","index.js"],"names":["animations","scale","transitions","ease","duration","Panel","props","title","description","bgColor","image","viewName","link","style","panel","backgroundImage","backgroundColor","useState","toView","setView","div","className","onClick","event","preventDefault","window","location","assign","animate","transition","exit","opacity","push","to","Dashboard","process","Heading","name","button","x","src","alt","variants","y","enter","Articles","initial","About","Projects","IconButton","href","open","whileHover","rotate","Nav","staggerChildren","ParticleBackground","position","width","height","top","bottom","left","right","overflow","zIndex","outerHeight","params","App","render","exitBeforeEnter","key","pathname","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.49326756.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './Panel.css'\nimport { Redirect } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\n//Effects\nconst animations={\n    scale: [0, 1],\n}\nconst transitions={ \n    ease: \"easeIn\",\n    duration: 2\n}\n\n//Represents a panel block on dashboard (about me, projects, articles)\nfunction Panel(props) {\n    const { title, description, bgColor, image, viewName, link} = props\n\n    const style = {\n        panel: {backgroundImage: `url(${image})`,\n        backgroundColor: bgColor,\n        }\n    }\n\n    //Add state to redirect user on click\n    const [toView, setView] = useState(false)\n    function redirect(event) {\n        event.preventDefault()\n        if (link) {\n            window.location.assign(viewName)\n        } else {\n            setView(true)\n        }\n    }\n\n    return (\n\n            <motion.div className=\"panel\" onClick={redirect} style={style.panel} animate={animations} transition={transitions} exit={{ opacity: 0 }}>\n                {toView ? <Redirect push to={`/${viewName}`}/> : null}\n                \n                <div className=\"description\">\n                    <p>{description}</p>\n                </div>\n                <div className=\"title\">\n                    <h1> {title} </h1>\n                    \n                </div>\n            </motion.div>\n    )\n}\n\nexport default Panel\n\n","import React from 'react'\nimport Panel from '../Panel/Panel.js'\nimport './Dashboard.css'\n// import { ReactComponent as StreakSVG } from './streak.svg';\n//Represents homepage grid\nfunction Dashboard() {\n\n    return (\n        <div className=\"dashboard\">\n\n            {/* About Me */}\n            <div className=\"about\">\n                    <Panel \n                        title=\"About Me\"\n                        bgColor = 'rgb(187,61,32, .8)'\n                        description = \"Welcome to my portfolio website! Click here to learn more about me and my interests.\"\n                        image = {`${process.env.PUBLIC_URL}/images/me.jpeg`}\n                        viewName=\"About\"\n                    />\n            </div>\n\n            { /* Projects */ }\n            <div className=\"projects\">\n                    <Panel \n                        title=\"Projects\"\n                        bgColor = 'rgb(23,134,68, .9)'\n                        description = \"This section is where I showcase both my active and previous work in more detail than on github. If you'd like to learn more about specific projects click here!\"\n                        image = \"./streak.svg\"\n                        viewName=\"Projects\"\n                    />\n                    {/*\n                    <div className=\"streak\">\n                        <StreakSVG />\n                    </div>*/}\n            </div>\n\n            {/* Articles */}\n            <div className=\"articles\">\n                    <Panel \n                        title=\"Articles\"\n                        bgColor = 'rgb(24,89,118, .9)'\n                        description = \"My articles can be found on my medium page. This section gives a high level overview of the articles and the inspiration behind each of them.\"\n                        viewName=\"Articles\"\n\n                    />\n            </div>\n\n            {/* DIY */}\n            <div className=\"diy\">\n                    <Panel \n                        title=\"DIY\"\n                        bgColor = 'rgb(255,135,0, .9)'\n                        description = \"This section is still under construction. (No pun intended.) This will be where I showcase the various crafts I make myself.\"\n                        viewName=\"\"\n                    />\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\n//import Badge from '../Badge/Badge.js'\nimport { Link } from 'react-router-dom'\nimport { motion } from \"framer-motion\";\nimport \"./Heading.css\"\n\nfunction Heading(props) {\n    const {name} = props\n\n\n    return(\n        <div className=\"wrapper\">\n                <div className=\"title\">\n                    <h1>{name}</h1>\n                </div>\n                <div className=\"return\">\n                    <motion.button\n                        animate={{ x: [100, 0]}} \n                        transitions={{ ease: \"easeIn\", duration: 3}} \n                    >\n                        <Link to=\"/\">\n                            <img src={`${process.env.PUBLIC_URL}/icons/chevron.svg`} alt=\"return\"/>\n                        </Link>\n                    </motion.button>           \n                </div>\n        </div>\n    )\n}\n\nexport default Heading","import React from 'react'\nimport Heading from '../Heading/Heading.js'\nimport { motion } from \"framer-motion\"\nimport './Articles.css'\nimport Panel from '../Panel/Panel.js'\n\nconst transition = {\n    duration: 1,\n    ease: [0.43, 0.13, 0.23, 0.96]\n  }\n  \n  const variants = {\n    exit: { y: \"50%\", opacity: 0, transition },\n    enter: {\n      y: \"0%\",\n      opacity: 1,\n      transition\n    }\n  }\n  \n\nfunction Articles() {\n\n    return (\n            <motion.div className=\"art\" initial=\"exit\" animate=\"enter\" exit=\"exit\" variants={variants}>\n                <div className=\"heading\">\n                    <Heading name=\"Articles\"/> \n                </div>\n\n                <Panel \n                        title = \"Solving Mazes\"\n                        bgColor = 'rgb(0,0,0, .8)'\n                        description = \"Solving Mazes with DFS is the first big article that I've written. The article looks at the general structure of a maze and breaks down how that structure can be represented as a graph. From that point, I go through a step by step explanation showing how the algorithm works. I give an overview of adding elements to the stack, removing them and explain backtracking a bit.\"\n                        viewName = \"https://medium.com/swlh/solving-mazes-with-depth-first-search-e315771317ae\"\n                        link = \"true\"\n                />\n\n                <Panel \n                    title=\"Prefix Trees\"\n                    bgColor = 'rgb(0,0,0, .8)'\n                    description = \"This is an article that I thought would be fun to write and it was! Here I talk about Prefix Trees (aka Tries) and how I implemented them into my Relevant for Reddit project in an attempt to save database space. I still need to benchmark my implementation against hashmaps but thats a milestone set for Relevant v1.5 :)\"\n                    viewName = \"https://medium.com/@ablades/would-you-like-some-tries-with-that-afbc87e56eab\"\n                    link = \"true\"\n                />\n\n                <Panel \n                    title = \"Relevant\"\n                    bgColor = 'rgb(0,0,0, .8)'\n                    description = \"ON DECK: This is an article I'm actively writing. In depth on my experience building a web application for reddit using React/Redux, Golang, MongoDB and Docker. I'll talk about some of the things I learned, things I wished I did differently and what I gained out of the entire experience. I've had a blast working on this project and I hope some of that passion will come through in this article.\"\n                    viewName = \"/\"\n                    link = \"true\"\n                />\n            </motion.div>\n    )\n}\n\nexport default Articles","import React from 'react'\nimport Heading from '../Heading/Heading.js'\nimport './About.css'\nimport { motion } from \"framer-motion\";\n\n\nconst transition = {\n    duration: 1,\n    ease: [0.43, 0.13, 0.23, 0.96]\n  }\n  \n  const variants = {\n    exit: { y: \"50%\", opacity: 0, transition },\n    enter: {\n      y: \"0%\",\n      opacity: 1,\n      transition\n    }\n  }\n  \n\nfunction About() {\n\n    return (\n\n            <motion.div className=\"abt\" initial=\"exit\" animate=\"enter\" exit=\"exit\" variants={variants}>\n                <Heading name=\"About Me\"/>\n                    <h1>My Background...</h1>\n                    <p> Hi! My name is Audaris Blades. The pronuciation probably isn't what you expect though, (Ow-Dar-Reese Blah-dez) but you can just call me Audi.</p>\n                    <p> I'm currently a Computer Science student at Dominican University of Calfornia. Though I grew up in Nashville, Tennessee where I spent a lot of time tinkering with anything and everything I could get my hands on. When I finally got my first computer at the tail end of middle school, I was hooked.\n                    I was amazed by all the things that could be done. A simple click to open an application, the tactile feedback from a keyboard. All of that and more made me want to learn about how to use and create some of the cool\n                    things this little box could do. So I researched, read and learned all I could. Starting out with the more basic stuff like what are the components that make a computer, eventually moving on up to how those compontents talk/work togther.\n                    That's how my passion for computers and techonology came to be and to this day I still have that fire. Every day I feel like I can learn something new, expand my knowledge, learn different approaches, tradeoffs to certain algorithms, libraries, implementations,\n                    the areas are endless. For that reason alone I knew I wanted to have a career in techonology. It's one that I know I'll never be bored with.</p>\n\n\n                    <h1>My Ambtions...</h1>\n                    <p> As I mentioned a bit earlier, I'm currently finishing up my C.S. Degree going into my senior year. Right out of school, I really want to be a software developer here in the Greater Nashville Area, near all my family and friends, that works on creating and implementing Microservices (ideally written in Golang but I'm not picky) into a company's prexisting infrastrcture.\n                    Why Microservices? Well I think Microservices have a lot of benefits when utilized properly. This first one that comes to mind is that microservices can help replace and speed up certain aspects of legacy hardware without requiring a full on rewrite and the disruption of many services.\n                    At the end of the day though I'd be content with any sort of Software Development role where I can commit to codebase and feel like I'm contributing to some sort of end goal. I'd also like to have an application with a small size userbase that I maintain in my freetime. I think my Relevant for Reddit project has a lot of potential in that regard but we'll see.\n\n                    As for future career, I'd like to move up to a senior development role and after being in that position for awhile, I'd potentially like to either get my MBA or try and start my own venture but that's all super far out thinking. :)</p>\n\n\n                    <h1>Closing Notes...</h1>\n                    <p>Thanks for dropping by my page. Please feel free to check out any of my projects and if any of what I've said is of interest to you please don't hesitate to reach out. You can reach me at audaris@gmail.com.</p>\n\n\n            </motion.div>\n    )\n}\n\nexport default About","import React from 'react'\nimport Heading from '../Heading/Heading.js'\nimport { motion } from \"framer-motion\"\nimport './Projects.css'\nimport Panel from '../Panel/Panel.js'\n\nconst transition = {\n    duration: 1,\n    ease: [0.43, 0.13, 0.23, 0.96]\n  }\n  \n  const variants = {\n    exit: { y: \"50%\", opacity: 0, transition },\n    enter: {\n      y: \"0%\",\n      opacity: 1,\n      transition\n    }\n  }\n  \n\nfunction Projects() {\n\n    return (\n            <motion.div className=\"proj\" initial=\"exit\" animate=\"enter\" exit=\"exit\" variants={variants}>\n                <div className=\"heading\">\n                    <Heading name=\"Projects\"/> \n                </div>\n\n                <Panel \n                        title = \"Relevant - for Reddit\"\n                        bgColor = 'rgb(0,0,0, .8)'\n                        description = \"Relevant is a Google Alerts style web application designed specifically to work with Reddit. In this project I use third part auth, concurrency, custom datastructures, create an API and a lot more. I'm currently in the process of Dockerizing and getting the project ready for V1.0!\"\n                        viewName = \"github.com/ablades/relevantreddit\"\n                        link = \"true\"\n                />\n\n<Panel \n                        title = \"Portfolio Site\"\n                        bgColor = 'rgb(0,0,0, .8)'\n                        description = \"This website! Built using with React and third party libraries. Currently working on a CRON Job that'll pull and upload my github streak once a week.\"\n                        viewName = \"github.com/ablades/relevantreddit\"\n                        link = \"true\"\n                />\n\n\n            </motion.div>\n    )\n}\n\nexport default Projects","import React from 'react'\nimport './IconButton.css'\nimport { motion } from \"framer-motion\";\n\nfunction IconButton(props) {\n\n    const { name, location, alt, href} = props\n\n    return (\n\n        <motion.button className=\"iconbutton\"\n            onClick={() =>  window.open(href)} \n            animate={{scale: [0, 1] }} \n            transitions={{ ease: \"easeIn\", duration: 3}} \n            whileHover={{ scale: 1.3, rotate: 360, duration: 10 }}\n        >\n            <img src={`${process.env.PUBLIC_URL}${location}`} alt={alt}/>\n            {/* Render only if name exists */}\n            {name ? <span>{name}</span> : ''}\n        </motion.button>\n    )\n}\n\nexport default IconButton","import React from 'react'\nimport IconButton from '../IconButton/IconButton.js'\nimport './Nav.css'\nimport { motion } from \"framer-motion\";\nfunction Nav() {\n\n    return (\n        <nav className=\"navbar\">\n            <div className=\"name\">\n                <h1>Audaris 'Audi' Blades - Aspiring Software Developer </h1>\n            </div>\n                <motion.div className=\"icons\" transition={{staggerChildren: 0.5}}>\n                    <IconButton\n                        location = \"icons/medium-icon.svg\"\n                        alt = \"medium\"\n                        href = \"https://medium.com/@ablades\"\n                    />\n\n                    <IconButton\n                        location = \"icons/github-icon.svg\"\n                        alt = \"github\"\n                        href = \"https://github.com/ablades\"\n                    />\n\n                    <IconButton\n                        location = \"icons/linkedin-icon.svg\"\n                        alt = \"linkedin\"\n                        href = \"https://linkedin.com/in/ablades\"\n                    />\n                    \n                    {/* ADD DOWNLOAD AND RESUME */}\n                    <IconButton\n                        location = \"icons/resume-icon.svg\"\n                        alt = \"resume\"\n                        href ={`${process.env.PUBLIC_URL}resume.pdf`}\n                        name = \"resume\"\n                    />\n\n                </motion.div>\n        </nav>\n\n    )\n}\n\nexport default Nav\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\n\n\nfunction ParticleBackground() {\n    return(\n        <div\n            style={{\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"110%\",\n                top:0,\n                bottom:0,\n                left:0,\n                right:0,\n                overflow: \"hidden\",\n                zIndex: 0,\n                backgroundColor: \"black\",\n            }}\n        \n        >\n            <Particles \n                height={window.outerHeight}\n                params={{\n                    \"particles\": {\n                        \"number\": {\n                            \"value\": 100\n                        },\n                        \"size\": {\n                            \"value\": 4\n                        }\n                    },\n                    \"interactivity\": {\n                        \"events\": {\n                        }\n                    }\n                }} \n            />\n        </div>\n)\n}\n\nexport default ParticleBackground\n","import React from 'react'\nimport './App.css'\nimport Dashboard from './components/Dashboard/Dashboard.js'\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Articles from './components/Articles/Articles.js'\nimport About from './components/About/About.js'\nimport './components/About/About.css'\nimport Projects from './components/Projects/Projects.js'\nimport { AnimatePresence } from \"framer-motion\"\nimport Nav from './components/Nav/Nav.js'\nimport ParticleBackground from './components/ParticleBackground'\n\n\nfunction App() {\n  \n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Route render={({ location }) => (\n          <AnimatePresence exitBeforeEnter initial={false}>\n            <Switch location={location} key={location.pathname}>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/projects\" component={Projects} />\n              <Route path=\"/articles\" component={Articles} />\n            </Switch>\n          </AnimatePresence>\n        )} />\n      </div>\n      <ParticleBackground />\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}